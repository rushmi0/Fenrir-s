name: Build GraalVM Native Image and Run Tests


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ขั้นตอนที่ 1: ตรวจสอบโค้ดจาก repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # ขั้นตอนที่ 2: ตั้งค่า Docker Compose สำหรับการทดสอบ
      # * https://github.com/marketplace/actions/docker-compose-with-tests-action?version=v1.5.0
      - name: Start Docker Compose with Database
        uses: adambirds/docker-compose-action@v1.5.0
        with:
          up-flags: relay-db  # เรียกใช้ relay-db ซึ่งเป็น service ใน docker-compose.yml

      # ขั้นตอนที่ 3: ติดตั้ง GraalVM
      # * https://github.com/marketplace/actions/github-action-for-graalvm?version=v1.2.5
      - name: Setup GraalVM Environment
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          version: '21.0.2'
          # เลือก GraalVM แบบ Community Edition
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # ขั้นตอนที่ 4: ตรวจสอบเวอร์ชันของ GraalVM
      - name: Verify GraalVM
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version

      # ขั้นตอนที่ 5: แก้ไขค่าในไฟล์ .env สำหรับการใช้งาน
      - name: Update .env Configuration
        run: |
          sed -i 's/#DATABASE_URL=jdbc:postgresql:\/\/localhost:5432/DATABASE_URL=jdbc:postgresql:\/\/localhost:5432/' .env
          sed -i 's/DATABASE_URL=jdbc:postgresql:\/\/relay-db:5432/#DATABASE_URL=jdbc:postgresql:\/\/relay-db:5432/' .env
        # ปิดคอมเมนต์ relay-db และเปิดคอมเมนต์ localhost

      # ขั้นตอนที่ 6: คอมไพล์โปรเจกต์โดยใช้ Gradle พร้อมตัวเลือก Native Image
      - name: Compile Project with GraalVM Native Image
        run: ./gradlew nativeTestCompile
